{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupAuthExtension = void 0;\n\nconst query_1 = require(\"cosmjs-types/cosmos/auth/v1beta1/query\");\n\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\n\nconst utils_1 = require(\"./utils\");\n\nfunction setupAuthExtension(base) {\n  const rpc = utils_1.createProtobufRpcClient(base); // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    auth: {\n      account: async address => {\n        const {\n          account\n        } = await queryService.Account({\n          address: address\n        });\n        return account !== null && account !== void 0 ? account : null;\n      },\n      verified: {\n        account: async address => {\n          // https://github.com/cosmos/cosmos-sdk/blob/8cab43c8120fec5200c3459cbf4a92017bb6f287/x/auth/types/keys.go#L29-L32\n          const key = Uint8Array.from([0x01, ...utils_1.toAccAddress(address)]);\n          const responseData = await base.queryVerified(\"acc\", key);\n          if (responseData.length === 0) return null;\n          return any_1.Any.decode(responseData);\n        }\n      }\n    }\n  };\n}\n\nexports.setupAuthExtension = setupAuthExtension;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAGA;;AA8BA,SAAgBA,kBAAhB,CAAmCC,IAAnC,EAAoD;EAClD,MAAMC,GAAG,GAAGC,gCAAwBF,IAAxB,CAAZ,CADkD,CAElD;EACA;;EACA,MAAMG,YAAY,GAAG,IAAIC,uBAAJ,CAAoBH,GAApB,CAArB;EAEA,OAAO;IACLI,IAAI,EAAE;MACJC,OAAO,EAAE,MAAOC,OAAP,IAA0B;QACjC,MAAM;UAAED;QAAF,IAAc,MAAMH,YAAY,CAACK,OAAb,CAAqB;UAAED,OAAO,EAAEA;QAAX,CAArB,CAA1B;QACA,OAAOD,OAAO,SAAP,WAAO,WAAP,aAAW,IAAlB;MACD,CAJG;MAKJG,QAAQ,EAAE;QACRH,OAAO,EAAE,MAAOC,OAAP,IAA0B;UACjC;UACA,MAAMG,GAAG,GAAGC,UAAU,CAACC,IAAX,CAAgB,CAAC,IAAD,EAAO,GAAGV,qBAAaK,OAAb,CAAV,CAAhB,CAAZ;UACA,MAAMM,YAAY,GAAG,MAAMb,IAAI,CAACc,aAAL,CAAmB,KAAnB,EAA0BJ,GAA1B,CAA3B;UACA,IAAIG,YAAY,CAACE,MAAb,KAAwB,CAA5B,EAA+B,OAAO,IAAP;UAC/B,OAAOC,UAAIC,MAAJ,CAAWJ,YAAX,CAAP;QACD;MAPO;IALN;EADD,CAAP;AAiBD;;AAvBDK","names":["setupAuthExtension","base","rpc","utils_1","queryService","query_1","auth","account","address","Account","verified","key","Uint8Array","from","responseData","queryVerified","length","any_1","decode","exports"],"sourceRoot":"","sources":["../../src/queries/auth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}