{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"ics23\";\nvar HashOp;\n\n(function (HashOp) {\n  /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n  HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n  HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n  HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n  HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n  HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n  /** BITCOIN - ripemd160(sha256(x)) */\n\n  HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n  HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp = exports.HashOp || (exports.HashOp = {}));\n\nfunction hashOpFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NO_HASH\":\n      return HashOp.NO_HASH;\n\n    case 1:\n    case \"SHA256\":\n      return HashOp.SHA256;\n\n    case 2:\n    case \"SHA512\":\n      return HashOp.SHA512;\n\n    case 3:\n    case \"KECCAK\":\n      return HashOp.KECCAK;\n\n    case 4:\n    case \"RIPEMD160\":\n      return HashOp.RIPEMD160;\n\n    case 5:\n    case \"BITCOIN\":\n      return HashOp.BITCOIN;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return HashOp.UNRECOGNIZED;\n  }\n}\n\nexports.hashOpFromJSON = hashOpFromJSON;\n\nfunction hashOpToJSON(object) {\n  switch (object) {\n    case HashOp.NO_HASH:\n      return \"NO_HASH\";\n\n    case HashOp.SHA256:\n      return \"SHA256\";\n\n    case HashOp.SHA512:\n      return \"SHA512\";\n\n    case HashOp.KECCAK:\n      return \"KECCAK\";\n\n    case HashOp.RIPEMD160:\n      return \"RIPEMD160\";\n\n    case HashOp.BITCOIN:\n      return \"BITCOIN\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.hashOpToJSON = hashOpToJSON;\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\n\nvar LengthOp;\n\n(function (LengthOp) {\n  /** NO_PREFIX - NO_PREFIX don't include any length info */\n  LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n  /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n\n  LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n  /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n\n  LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n  /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n\n  LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n  /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n\n  LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n  /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n\n  LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n  /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n\n  LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n  /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n\n  LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n  /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n\n  LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n  LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp = exports.LengthOp || (exports.LengthOp = {}));\n\nfunction lengthOpFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NO_PREFIX\":\n      return LengthOp.NO_PREFIX;\n\n    case 1:\n    case \"VAR_PROTO\":\n      return LengthOp.VAR_PROTO;\n\n    case 2:\n    case \"VAR_RLP\":\n      return LengthOp.VAR_RLP;\n\n    case 3:\n    case \"FIXED32_BIG\":\n      return LengthOp.FIXED32_BIG;\n\n    case 4:\n    case \"FIXED32_LITTLE\":\n      return LengthOp.FIXED32_LITTLE;\n\n    case 5:\n    case \"FIXED64_BIG\":\n      return LengthOp.FIXED64_BIG;\n\n    case 6:\n    case \"FIXED64_LITTLE\":\n      return LengthOp.FIXED64_LITTLE;\n\n    case 7:\n    case \"REQUIRE_32_BYTES\":\n      return LengthOp.REQUIRE_32_BYTES;\n\n    case 8:\n    case \"REQUIRE_64_BYTES\":\n      return LengthOp.REQUIRE_64_BYTES;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LengthOp.UNRECOGNIZED;\n  }\n}\n\nexports.lengthOpFromJSON = lengthOpFromJSON;\n\nfunction lengthOpToJSON(object) {\n  switch (object) {\n    case LengthOp.NO_PREFIX:\n      return \"NO_PREFIX\";\n\n    case LengthOp.VAR_PROTO:\n      return \"VAR_PROTO\";\n\n    case LengthOp.VAR_RLP:\n      return \"VAR_RLP\";\n\n    case LengthOp.FIXED32_BIG:\n      return \"FIXED32_BIG\";\n\n    case LengthOp.FIXED32_LITTLE:\n      return \"FIXED32_LITTLE\";\n\n    case LengthOp.FIXED64_BIG:\n      return \"FIXED64_BIG\";\n\n    case LengthOp.FIXED64_LITTLE:\n      return \"FIXED64_LITTLE\";\n\n    case LengthOp.REQUIRE_32_BYTES:\n      return \"REQUIRE_32_BYTES\";\n\n    case LengthOp.REQUIRE_64_BYTES:\n      return \"REQUIRE_64_BYTES\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.lengthOpToJSON = lengthOpToJSON;\nconst baseExistenceProof = {};\nexports.ExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n\n    if (message.leaf !== undefined) {\n      exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n    }\n\n    for (const v of message.path) {\n      exports.InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseExistenceProof);\n    message.path = [];\n    message.key = new Uint8Array();\n    message.value = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.value = reader.bytes();\n          break;\n\n        case 3:\n          message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.path.push(exports.InnerOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseExistenceProof);\n    message.path = [];\n    message.key = new Uint8Array();\n    message.value = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.value !== undefined && object.value !== null) {\n      message.value = bytesFromBase64(object.value);\n    }\n\n    if (object.leaf !== undefined && object.leaf !== null) {\n      message.leaf = exports.LeafOp.fromJSON(object.leaf);\n    } else {\n      message.leaf = undefined;\n    }\n\n    if (object.path !== undefined && object.path !== null) {\n      for (const e of object.path) {\n        message.path.push(exports.InnerOp.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n\n    if (message.path) {\n      obj.path = message.path.map(e => e ? exports.InnerOp.toJSON(e) : undefined);\n    } else {\n      obj.path = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n\n    if (object.leaf !== undefined && object.leaf !== null) {\n      message.leaf = exports.LeafOp.fromPartial(object.leaf);\n    } else {\n      message.leaf = undefined;\n    }\n\n    message.path = [];\n\n    if (object.path !== undefined && object.path !== null) {\n      for (const e of object.path) {\n        message.path.push(exports.InnerOp.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseNonExistenceProof = {};\nexports.NonExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.left !== undefined) {\n      exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.right !== undefined) {\n      exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseNonExistenceProof);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.left = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.right = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseNonExistenceProof);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.left !== undefined && object.left !== null) {\n      message.left = exports.ExistenceProof.fromJSON(object.left);\n    } else {\n      message.left = undefined;\n    }\n\n    if (object.right !== undefined && object.right !== null) {\n      message.right = exports.ExistenceProof.fromJSON(object.right);\n    } else {\n      message.right = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.left !== undefined && (obj.left = message.left ? exports.ExistenceProof.toJSON(message.left) : undefined);\n    message.right !== undefined && (obj.right = message.right ? exports.ExistenceProof.toJSON(message.right) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseNonExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n\n    if (object.left !== undefined && object.left !== null) {\n      message.left = exports.ExistenceProof.fromPartial(object.left);\n    } else {\n      message.left = undefined;\n    }\n\n    if (object.right !== undefined && object.right !== null) {\n      message.right = exports.ExistenceProof.fromPartial(object.right);\n    } else {\n      message.right = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseCommitmentProof = {};\nexports.CommitmentProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.exist !== undefined) {\n      exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.nonexist !== undefined) {\n      exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.batch !== undefined) {\n      exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.compressed !== undefined) {\n      exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommitmentProof);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.batch = exports.BatchProof.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommitmentProof);\n\n    if (object.exist !== undefined && object.exist !== null) {\n      message.exist = exports.ExistenceProof.fromJSON(object.exist);\n    } else {\n      message.exist = undefined;\n    }\n\n    if (object.nonexist !== undefined && object.nonexist !== null) {\n      message.nonexist = exports.NonExistenceProof.fromJSON(object.nonexist);\n    } else {\n      message.nonexist = undefined;\n    }\n\n    if (object.batch !== undefined && object.batch !== null) {\n      message.batch = exports.BatchProof.fromJSON(object.batch);\n    } else {\n      message.batch = undefined;\n    }\n\n    if (object.compressed !== undefined && object.compressed !== null) {\n      message.compressed = exports.CompressedBatchProof.fromJSON(object.compressed);\n    } else {\n      message.compressed = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n    message.batch !== undefined && (obj.batch = message.batch ? exports.BatchProof.toJSON(message.batch) : undefined);\n    message.compressed !== undefined && (obj.compressed = message.compressed ? exports.CompressedBatchProof.toJSON(message.compressed) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommitmentProof);\n\n    if (object.exist !== undefined && object.exist !== null) {\n      message.exist = exports.ExistenceProof.fromPartial(object.exist);\n    } else {\n      message.exist = undefined;\n    }\n\n    if (object.nonexist !== undefined && object.nonexist !== null) {\n      message.nonexist = exports.NonExistenceProof.fromPartial(object.nonexist);\n    } else {\n      message.nonexist = undefined;\n    }\n\n    if (object.batch !== undefined && object.batch !== null) {\n      message.batch = exports.BatchProof.fromPartial(object.batch);\n    } else {\n      message.batch = undefined;\n    }\n\n    if (object.compressed !== undefined && object.compressed !== null) {\n      message.compressed = exports.CompressedBatchProof.fromPartial(object.compressed);\n    } else {\n      message.compressed = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseLeafOp = {\n  hash: 0,\n  prehashKey: 0,\n  prehashValue: 0,\n  length: 0\n};\nexports.LeafOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash !== 0) {\n      writer.uint32(8).int32(message.hash);\n    }\n\n    if (message.prehashKey !== 0) {\n      writer.uint32(16).int32(message.prehashKey);\n    }\n\n    if (message.prehashValue !== 0) {\n      writer.uint32(24).int32(message.prehashValue);\n    }\n\n    if (message.length !== 0) {\n      writer.uint32(32).int32(message.length);\n    }\n\n    if (message.prefix.length !== 0) {\n      writer.uint32(42).bytes(message.prefix);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseLeafOp);\n    message.prefix = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.int32();\n          break;\n\n        case 2:\n          message.prehashKey = reader.int32();\n          break;\n\n        case 3:\n          message.prehashValue = reader.int32();\n          break;\n\n        case 4:\n          message.length = reader.int32();\n          break;\n\n        case 5:\n          message.prefix = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseLeafOp);\n    message.prefix = new Uint8Array();\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = hashOpFromJSON(object.hash);\n    } else {\n      message.hash = 0;\n    }\n\n    if (object.prehashKey !== undefined && object.prehashKey !== null) {\n      message.prehashKey = hashOpFromJSON(object.prehashKey);\n    } else {\n      message.prehashKey = 0;\n    }\n\n    if (object.prehashValue !== undefined && object.prehashValue !== null) {\n      message.prehashValue = hashOpFromJSON(object.prehashValue);\n    } else {\n      message.prehashValue = 0;\n    }\n\n    if (object.length !== undefined && object.length !== null) {\n      message.length = lengthOpFromJSON(object.length);\n    } else {\n      message.length = 0;\n    }\n\n    if (object.prefix !== undefined && object.prefix !== null) {\n      message.prefix = bytesFromBase64(object.prefix);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    message.prehashKey !== undefined && (obj.prehashKey = hashOpToJSON(message.prehashKey));\n    message.prehashValue !== undefined && (obj.prehashValue = hashOpToJSON(message.prehashValue));\n    message.length !== undefined && (obj.length = lengthOpToJSON(message.length));\n    message.prefix !== undefined && (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n\n    const message = Object.assign({}, baseLeafOp);\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;\n    message.prehashKey = (_b = object.prehashKey) !== null && _b !== void 0 ? _b : 0;\n    message.prehashValue = (_c = object.prehashValue) !== null && _c !== void 0 ? _c : 0;\n    message.length = (_d = object.length) !== null && _d !== void 0 ? _d : 0;\n    message.prefix = (_e = object.prefix) !== null && _e !== void 0 ? _e : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseInnerOp = {\n  hash: 0\n};\nexports.InnerOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash !== 0) {\n      writer.uint32(8).int32(message.hash);\n    }\n\n    if (message.prefix.length !== 0) {\n      writer.uint32(18).bytes(message.prefix);\n    }\n\n    if (message.suffix.length !== 0) {\n      writer.uint32(26).bytes(message.suffix);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseInnerOp);\n    message.prefix = new Uint8Array();\n    message.suffix = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.int32();\n          break;\n\n        case 2:\n          message.prefix = reader.bytes();\n          break;\n\n        case 3:\n          message.suffix = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseInnerOp);\n    message.prefix = new Uint8Array();\n    message.suffix = new Uint8Array();\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = hashOpFromJSON(object.hash);\n    } else {\n      message.hash = 0;\n    }\n\n    if (object.prefix !== undefined && object.prefix !== null) {\n      message.prefix = bytesFromBase64(object.prefix);\n    }\n\n    if (object.suffix !== undefined && object.suffix !== null) {\n      message.suffix = bytesFromBase64(object.suffix);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    message.prefix !== undefined && (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n    message.suffix !== undefined && (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseInnerOp);\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;\n    message.prefix = (_b = object.prefix) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.suffix = (_c = object.suffix) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseProofSpec = {\n  maxDepth: 0,\n  minDepth: 0\n};\nexports.ProofSpec = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.leafSpec !== undefined) {\n      exports.LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.innerSpec !== undefined) {\n      exports.InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.maxDepth !== 0) {\n      writer.uint32(24).int32(message.maxDepth);\n    }\n\n    if (message.minDepth !== 0) {\n      writer.uint32(32).int32(message.minDepth);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofSpec);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.leafSpec = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.innerSpec = exports.InnerSpec.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.maxDepth = reader.int32();\n          break;\n\n        case 4:\n          message.minDepth = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofSpec);\n\n    if (object.leafSpec !== undefined && object.leafSpec !== null) {\n      message.leafSpec = exports.LeafOp.fromJSON(object.leafSpec);\n    } else {\n      message.leafSpec = undefined;\n    }\n\n    if (object.innerSpec !== undefined && object.innerSpec !== null) {\n      message.innerSpec = exports.InnerSpec.fromJSON(object.innerSpec);\n    } else {\n      message.innerSpec = undefined;\n    }\n\n    if (object.maxDepth !== undefined && object.maxDepth !== null) {\n      message.maxDepth = Number(object.maxDepth);\n    } else {\n      message.maxDepth = 0;\n    }\n\n    if (object.minDepth !== undefined && object.minDepth !== null) {\n      message.minDepth = Number(object.minDepth);\n    } else {\n      message.minDepth = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.leafSpec !== undefined && (obj.leafSpec = message.leafSpec ? exports.LeafOp.toJSON(message.leafSpec) : undefined);\n    message.innerSpec !== undefined && (obj.innerSpec = message.innerSpec ? exports.InnerSpec.toJSON(message.innerSpec) : undefined);\n    message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n    message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseProofSpec);\n\n    if (object.leafSpec !== undefined && object.leafSpec !== null) {\n      message.leafSpec = exports.LeafOp.fromPartial(object.leafSpec);\n    } else {\n      message.leafSpec = undefined;\n    }\n\n    if (object.innerSpec !== undefined && object.innerSpec !== null) {\n      message.innerSpec = exports.InnerSpec.fromPartial(object.innerSpec);\n    } else {\n      message.innerSpec = undefined;\n    }\n\n    message.maxDepth = (_a = object.maxDepth) !== null && _a !== void 0 ? _a : 0;\n    message.minDepth = (_b = object.minDepth) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n\n};\nconst baseInnerSpec = {\n  childOrder: 0,\n  childSize: 0,\n  minPrefixLength: 0,\n  maxPrefixLength: 0,\n  hash: 0\n};\nexports.InnerSpec = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    writer.uint32(10).fork();\n\n    for (const v of message.childOrder) {\n      writer.int32(v);\n    }\n\n    writer.ldelim();\n\n    if (message.childSize !== 0) {\n      writer.uint32(16).int32(message.childSize);\n    }\n\n    if (message.minPrefixLength !== 0) {\n      writer.uint32(24).int32(message.minPrefixLength);\n    }\n\n    if (message.maxPrefixLength !== 0) {\n      writer.uint32(32).int32(message.maxPrefixLength);\n    }\n\n    if (message.emptyChild.length !== 0) {\n      writer.uint32(42).bytes(message.emptyChild);\n    }\n\n    if (message.hash !== 0) {\n      writer.uint32(48).int32(message.hash);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseInnerSpec);\n    message.childOrder = [];\n    message.emptyChild = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) {\n              message.childOrder.push(reader.int32());\n            }\n          } else {\n            message.childOrder.push(reader.int32());\n          }\n\n          break;\n\n        case 2:\n          message.childSize = reader.int32();\n          break;\n\n        case 3:\n          message.minPrefixLength = reader.int32();\n          break;\n\n        case 4:\n          message.maxPrefixLength = reader.int32();\n          break;\n\n        case 5:\n          message.emptyChild = reader.bytes();\n          break;\n\n        case 6:\n          message.hash = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseInnerSpec);\n    message.childOrder = [];\n    message.emptyChild = new Uint8Array();\n\n    if (object.childOrder !== undefined && object.childOrder !== null) {\n      for (const e of object.childOrder) {\n        message.childOrder.push(Number(e));\n      }\n    }\n\n    if (object.childSize !== undefined && object.childSize !== null) {\n      message.childSize = Number(object.childSize);\n    } else {\n      message.childSize = 0;\n    }\n\n    if (object.minPrefixLength !== undefined && object.minPrefixLength !== null) {\n      message.minPrefixLength = Number(object.minPrefixLength);\n    } else {\n      message.minPrefixLength = 0;\n    }\n\n    if (object.maxPrefixLength !== undefined && object.maxPrefixLength !== null) {\n      message.maxPrefixLength = Number(object.maxPrefixLength);\n    } else {\n      message.maxPrefixLength = 0;\n    }\n\n    if (object.emptyChild !== undefined && object.emptyChild !== null) {\n      message.emptyChild = bytesFromBase64(object.emptyChild);\n    }\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = hashOpFromJSON(object.hash);\n    } else {\n      message.hash = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.childOrder) {\n      obj.childOrder = message.childOrder.map(e => e);\n    } else {\n      obj.childOrder = [];\n    }\n\n    message.childSize !== undefined && (obj.childSize = message.childSize);\n    message.minPrefixLength !== undefined && (obj.minPrefixLength = message.minPrefixLength);\n    message.maxPrefixLength !== undefined && (obj.maxPrefixLength = message.maxPrefixLength);\n    message.emptyChild !== undefined && (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n\n    const message = Object.assign({}, baseInnerSpec);\n    message.childOrder = [];\n\n    if (object.childOrder !== undefined && object.childOrder !== null) {\n      for (const e of object.childOrder) {\n        message.childOrder.push(e);\n      }\n    }\n\n    message.childSize = (_a = object.childSize) !== null && _a !== void 0 ? _a : 0;\n    message.minPrefixLength = (_b = object.minPrefixLength) !== null && _b !== void 0 ? _b : 0;\n    message.maxPrefixLength = (_c = object.maxPrefixLength) !== null && _c !== void 0 ? _c : 0;\n    message.emptyChild = (_d = object.emptyChild) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.hash = (_e = object.hash) !== null && _e !== void 0 ? _e : 0;\n    return message;\n  }\n\n};\nconst baseBatchProof = {};\nexports.BatchProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.entries) {\n      exports.BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBatchProof);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseBatchProof);\n    message.entries = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.BatchEntry.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.BatchEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseBatchProof);\n    message.entries = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.BatchEntry.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseBatchEntry = {};\nexports.BatchEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.exist !== undefined) {\n      exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.nonexist !== undefined) {\n      exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBatchEntry);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseBatchEntry);\n\n    if (object.exist !== undefined && object.exist !== null) {\n      message.exist = exports.ExistenceProof.fromJSON(object.exist);\n    } else {\n      message.exist = undefined;\n    }\n\n    if (object.nonexist !== undefined && object.nonexist !== null) {\n      message.nonexist = exports.NonExistenceProof.fromJSON(object.nonexist);\n    } else {\n      message.nonexist = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseBatchEntry);\n\n    if (object.exist !== undefined && object.exist !== null) {\n      message.exist = exports.ExistenceProof.fromPartial(object.exist);\n    } else {\n      message.exist = undefined;\n    }\n\n    if (object.nonexist !== undefined && object.nonexist !== null) {\n      message.nonexist = exports.NonExistenceProof.fromPartial(object.nonexist);\n    } else {\n      message.nonexist = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseCompressedBatchProof = {};\nexports.CompressedBatchProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.entries) {\n      exports.CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    for (const v of message.lookupInners) {\n      exports.InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedBatchProof);\n    message.entries = [];\n    message.lookupInners = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.lookupInners.push(exports.InnerOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompressedBatchProof);\n    message.entries = [];\n    message.lookupInners = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.CompressedBatchEntry.fromJSON(e));\n      }\n    }\n\n    if (object.lookupInners !== undefined && object.lookupInners !== null) {\n      for (const e of object.lookupInners) {\n        message.lookupInners.push(exports.InnerOp.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.CompressedBatchEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    if (message.lookupInners) {\n      obj.lookupInners = message.lookupInners.map(e => e ? exports.InnerOp.toJSON(e) : undefined);\n    } else {\n      obj.lookupInners = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCompressedBatchProof);\n    message.entries = [];\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.CompressedBatchEntry.fromPartial(e));\n      }\n    }\n\n    message.lookupInners = [];\n\n    if (object.lookupInners !== undefined && object.lookupInners !== null) {\n      for (const e of object.lookupInners) {\n        message.lookupInners.push(exports.InnerOp.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseCompressedBatchEntry = {};\nexports.CompressedBatchEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.exist !== undefined) {\n      exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.nonexist !== undefined) {\n      exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedBatchEntry);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompressedBatchEntry);\n\n    if (object.exist !== undefined && object.exist !== null) {\n      message.exist = exports.CompressedExistenceProof.fromJSON(object.exist);\n    } else {\n      message.exist = undefined;\n    }\n\n    if (object.nonexist !== undefined && object.nonexist !== null) {\n      message.nonexist = exports.CompressedNonExistenceProof.fromJSON(object.nonexist);\n    } else {\n      message.nonexist = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.CompressedExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.CompressedNonExistenceProof.toJSON(message.nonexist) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCompressedBatchEntry);\n\n    if (object.exist !== undefined && object.exist !== null) {\n      message.exist = exports.CompressedExistenceProof.fromPartial(object.exist);\n    } else {\n      message.exist = undefined;\n    }\n\n    if (object.nonexist !== undefined && object.nonexist !== null) {\n      message.nonexist = exports.CompressedNonExistenceProof.fromPartial(object.nonexist);\n    } else {\n      message.nonexist = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseCompressedExistenceProof = {\n  path: 0\n};\nexports.CompressedExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n\n    if (message.leaf !== undefined) {\n      exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n    }\n\n    writer.uint32(34).fork();\n\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n\n    writer.ldelim();\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedExistenceProof);\n    message.path = [];\n    message.key = new Uint8Array();\n    message.value = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.value = reader.bytes();\n          break;\n\n        case 3:\n          message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n          } else {\n            message.path.push(reader.int32());\n          }\n\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompressedExistenceProof);\n    message.path = [];\n    message.key = new Uint8Array();\n    message.value = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.value !== undefined && object.value !== null) {\n      message.value = bytesFromBase64(object.value);\n    }\n\n    if (object.leaf !== undefined && object.leaf !== null) {\n      message.leaf = exports.LeafOp.fromJSON(object.leaf);\n    } else {\n      message.leaf = undefined;\n    }\n\n    if (object.path !== undefined && object.path !== null) {\n      for (const e of object.path) {\n        message.path.push(Number(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n\n    if (message.path) {\n      obj.path = message.path.map(e => e);\n    } else {\n      obj.path = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b;\n\n    const message = Object.assign({}, baseCompressedExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n\n    if (object.leaf !== undefined && object.leaf !== null) {\n      message.leaf = exports.LeafOp.fromPartial(object.leaf);\n    } else {\n      message.leaf = undefined;\n    }\n\n    message.path = [];\n\n    if (object.path !== undefined && object.path !== null) {\n      for (const e of object.path) {\n        message.path.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseCompressedNonExistenceProof = {};\nexports.CompressedNonExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.left !== undefined) {\n      exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.right !== undefined) {\n      exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompressedNonExistenceProof);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompressedNonExistenceProof);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.left !== undefined && object.left !== null) {\n      message.left = exports.CompressedExistenceProof.fromJSON(object.left);\n    } else {\n      message.left = undefined;\n    }\n\n    if (object.right !== undefined && object.right !== null) {\n      message.right = exports.CompressedExistenceProof.fromJSON(object.right);\n    } else {\n      message.right = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.left !== undefined && (obj.left = message.left ? exports.CompressedExistenceProof.toJSON(message.left) : undefined);\n    message.right !== undefined && (obj.right = message.right ? exports.CompressedExistenceProof.toJSON(message.right) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseCompressedNonExistenceProof);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n\n    if (object.left !== undefined && object.left !== null) {\n      message.left = exports.CompressedExistenceProof.fromPartial(object.left);\n    } else {\n      message.left = undefined;\n    }\n\n    if (object.right !== undefined && object.right !== null) {\n      message.right = exports.CompressedExistenceProof.fromPartial(object.right);\n    } else {\n      message.right = undefined;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","HashOp","hashOpFromJSON","object","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","UNRECOGNIZED","hashOpToJSON","LengthOp","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","encode","message","writer","minimal_1","Writer","create","key","length","uint32","bytes","value","leaf","undefined","fork","ldelim","v","path","decode","input","reader","Reader","end","len","pos","Object","Uint8Array","tag","push","skipType","fromJSON","bytesFromBase64","e","toJSON","obj","base64FromBytes","map","fromPartial","_a","_b","baseNonExistenceProof","left","right","baseCommitmentProof","exist","nonexist","batch","compressed","baseLeafOp","hash","prehashKey","prehashValue","int32","prefix","_c","_d","_e","baseInnerOp","suffix","baseProofSpec","maxDepth","minDepth","leafSpec","innerSpec","Number","baseInnerSpec","childOrder","childSize","minPrefixLength","maxPrefixLength","emptyChild","end2","baseBatchProof","entries","baseBatchEntry","baseCompressedBatchProof","lookupInners","baseCompressedBatchEntry","baseCompressedExistenceProof","baseCompressedNonExistenceProof","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","String","fromCharCode","join","util","Long","long_1","configure"],"sourceRoot":"","sources":["../../src/confio/proofs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}