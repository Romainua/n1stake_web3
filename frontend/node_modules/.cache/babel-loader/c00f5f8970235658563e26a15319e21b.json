{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"tendermint.crypto\";\nconst baseProof = {\n  total: long_1.default.ZERO,\n  index: long_1.default.ZERO\n};\nexports.Proof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.total.isZero()) {\n      writer.uint32(8).int64(message.total);\n    }\n\n    if (!message.index.isZero()) {\n      writer.uint32(16).int64(message.index);\n    }\n\n    if (message.leafHash.length !== 0) {\n      writer.uint32(26).bytes(message.leafHash);\n    }\n\n    for (const v of message.aunts) {\n      writer.uint32(34).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.int64();\n          break;\n\n        case 2:\n          message.index = reader.int64();\n          break;\n\n        case 3:\n          message.leafHash = reader.bytes();\n          break;\n\n        case 4:\n          message.aunts.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = long_1.default.fromString(object.total);\n    } else {\n      message.total = long_1.default.ZERO;\n    }\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = long_1.default.fromString(object.index);\n    } else {\n      message.index = long_1.default.ZERO;\n    }\n\n    if (object.leafHash !== undefined && object.leafHash !== null) {\n      message.leafHash = bytesFromBase64(object.leafHash);\n    }\n\n    if (object.aunts !== undefined && object.aunts !== null) {\n      for (const e of object.aunts) {\n        message.aunts.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.total !== undefined && (obj.total = (message.total || long_1.default.ZERO).toString());\n    message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n    message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n\n    if (message.aunts) {\n      obj.aunts = message.aunts.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.aunts = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseProof);\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = object.total;\n    } else {\n      message.total = long_1.default.ZERO;\n    }\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = object.index;\n    } else {\n      message.index = long_1.default.ZERO;\n    }\n\n    message.leafHash = (_a = object.leafHash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.aunts = [];\n\n    if (object.aunts !== undefined && object.aunts !== null) {\n      for (const e of object.aunts) {\n        message.aunts.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseValueOp = {};\nexports.ValueOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.proof !== undefined) {\n      exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.proof = exports.Proof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.Proof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseValueOp);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.Proof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseDominoOp = {\n  key: \"\",\n  input: \"\",\n  output: \"\"\n};\nexports.DominoOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n\n    if (message.input !== \"\") {\n      writer.uint32(18).string(message.input);\n    }\n\n    if (message.output !== \"\") {\n      writer.uint32(26).string(message.output);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDominoOp);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n\n        case 2:\n          message.input = reader.string();\n          break;\n\n        case 3:\n          message.output = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDominoOp);\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = String(object.key);\n    } else {\n      message.key = \"\";\n    }\n\n    if (object.input !== undefined && object.input !== null) {\n      message.input = String(object.input);\n    } else {\n      message.input = \"\";\n    }\n\n    if (object.output !== undefined && object.output !== null) {\n      message.output = String(object.output);\n    } else {\n      message.output = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.input !== undefined && (obj.input = message.input);\n    message.output !== undefined && (obj.output = message.output);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseDominoOp);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : \"\";\n    message.input = (_b = object.input) !== null && _b !== void 0 ? _b : \"\";\n    message.output = (_c = object.output) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n\n};\nconst baseProofOp = {\n  type: \"\"\n};\nexports.ProofOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n\n    if (message.key.length !== 0) {\n      writer.uint32(18).bytes(message.key);\n    }\n\n    if (message.data.length !== 0) {\n      writer.uint32(26).bytes(message.data);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n\n        case 2:\n          message.key = reader.bytes();\n          break;\n\n        case 3:\n          message.data = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n\n    if (object.type !== undefined && object.type !== null) {\n      message.type = String(object.type);\n    } else {\n      message.type = \"\";\n    }\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseProofOp);\n    message.type = (_a = object.type) !== null && _a !== void 0 ? _a : \"\";\n    message.key = (_b = object.key) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.data = (_c = object.data) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseProofOps = {};\nexports.ProofOps = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.ops) {\n      exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    if (object.ops !== undefined && object.ops !== null) {\n      for (const e of object.ops) {\n        message.ops.push(exports.ProofOp.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.ops) {\n      obj.ops = message.ops.map(e => e ? exports.ProofOp.toJSON(e) : undefined);\n    } else {\n      obj.ops = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    if (object.ops !== undefined && object.ops !== null) {\n      for (const e of object.ops) {\n        message.ops.push(exports.ProofOp.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","baseProof","total","long_1","ZERO","index","encode","message","writer","minimal_1","Writer","create","isZero","uint32","int64","leafHash","length","bytes","v","aunts","decode","input","reader","Reader","end","undefined","len","pos","Object","Uint8Array","tag","push","skipType","fromJSON","object","fromString","bytesFromBase64","e","toJSON","obj","toString","base64FromBytes","map","fromPartial","_a","baseValueOp","key","proof","fork","ldelim","baseDominoOp","output","string","String","_b","_c","baseProofOp","type","data","baseProofOps","ops","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","configure"],"sourceRoot":"","sources":["../../../src/tendermint/crypto/proof.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}