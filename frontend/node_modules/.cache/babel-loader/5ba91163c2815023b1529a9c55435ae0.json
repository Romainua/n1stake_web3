{"ast":null,"code":"\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.assertHash = exports.assertBytes = exports.assertBool = exports.assertNumber = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0; // The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\n\nconst crypto_1 = require(\"@noble/hashes/crypto\"); // Cast array to different type\n\n\nconst u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n\nexports.u8 = u8;\n\nconst u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nexports.u32 = u32; // Cast array to view\n\nconst createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\nexports.createView = createView; // The rotate right (circular right shift) operation for uint32\n\nconst rotr = (word, shift) => word << 32 - shift | word >>> shift;\n\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44; // There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\n\nif (!exports.isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({\n  length: 256\n}, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\n\nfunction bytesToHex(uint8a) {\n  // pre-caching improves the speed 6x\n  let hex = '';\n\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n\n  return hex;\n}\n\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\n\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte)) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n\n  return array;\n}\n\nexports.hexToBytes = hexToBytes; // Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\n\nexports.nextTick = (() => {\n  const nodeRequire = typeof module !== 'undefined' && typeof module.require === 'function' && module.require.bind(module);\n\n  try {\n    if (nodeRequire) {\n      const {\n        setImmediate\n      } = nodeRequire('timers');\n      return () => new Promise(resolve => setImmediate(resolve));\n    }\n  } catch (e) {}\n\n  return () => new Promise(resolve => setTimeout(resolve, 0));\n})(); // Returns control to thread each 'tick' ms to avoid blocking\n\n\nasync function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n\n  for (let i = 0; i < iters; i++) {\n    cb(i); // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await (0, exports.nextTick)();\n    ts += diff;\n  }\n}\n\nexports.asyncLoop = asyncLoop;\n\nfunction utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n\n  return new TextEncoder().encode(str);\n}\n\nexports.utf8ToBytes = utf8ToBytes;\n\nfunction toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\n\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n\n  return result;\n}\n\nexports.concatBytes = concatBytes;\n\nfunction assertNumber(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexports.assertNumber = assertNumber;\n\nfunction assertBool(b) {\n  if (typeof b !== 'boolean') {\n    throw new Error(`Expected boolean, not ${b}`);\n  }\n}\n\nexports.assertBool = assertBool;\n\nfunction assertBytes(bytes) {\n  for (var _len2 = arguments.length, lengths = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    lengths[_key2 - 1] = arguments[_key2];\n  }\n\n  if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n    return;\n  }\n\n  throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\n\nexports.assertBytes = assertBytes;\n\nfunction assertHash(hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  assertNumber(hash.outputLen);\n  assertNumber(hash.blockLen);\n}\n\nexports.assertHash = assertHash; // For runtime check if class implements interface\n\nclass Hash {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n\n}\n\nexports.Hash = Hash; // Check if object doens't have custom constructor (like Uint8Array/Array)\n\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\nfunction checkOpts(def, _opts) {\n  if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts))) throw new TypeError('Options should be object or undefined');\n  const opts = Object.assign(def, _opts);\n  return opts;\n}\n\nexports.checkOpts = checkOpts;\n\nfunction wrapConstructor(hashConstructor) {\n  const hashC = message => hashConstructor().update(toBytes(message)).digest();\n\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n\n  hashC.create = () => hashConstructor();\n\n  return hashC;\n}\n\nexports.wrapConstructor = wrapConstructor;\n\nfunction wrapConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n\n  hashC.create = opts => hashCons(opts);\n\n  return hashC;\n}\n\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\n\nfunction randomBytes() {\n  let bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n\n  if (crypto_1.crypto.web) {\n    return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto_1.crypto.node) {\n    return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n\nexports.randomBytes = randomBytes;","map":{"version":3,"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","assertHash","assertBytes","assertBool","assertNumber","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nodeRequire","module","bind","setImmediate","Promise","resolve","e","setTimeout","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","n","isSafeInteger","b","bytes","lengths","includes","hash","create","outputLen","blockLen","clone","_cloneInto","isPlainObject","obj","prototype","call","constructor","def","_opts","undefined","opts","assign","hashConstructor","hashC","message","update","digest","tmp","hashCons","msg","bytesLength","crypto","web","getRandomValues","node"],"sources":["/home/dfound/my-app/node_modules/@noble/hashes/utils.js"],"sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.assertHash = exports.assertBytes = exports.assertBool = exports.assertNumber = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexports.nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexports.assertBool = assertBool;\nfunction assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexports.assertBytes = assertBytes;\nfunction assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\nexports.assertHash = assertHash;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}