{"ast":null,"code":"var _jsxFileName = \"/home/dfound/frontend_dApp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { calculateFee, GasPrice } from \"@cosmjs/stargate\";\nimport { ConstantineInfo } from './chain.info.constantine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RPC = ConstantineInfo.rpc;\nconst ContractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connectWallet = async () => {\n      console.log('Connecting wallet...');\n\n      try {\n        if (window) {\n          if (window['keplr']) {\n            if (window.keplr['experimentalSuggestChain']) {\n              await window.keplr.experimentalSuggestChain(this.state.chainMeta);\n              await window.keplr.enable(this.state.chainMeta.chainId);\n              let offlineSigner = await window.getOfflineSigner(this.state.chainMeta.chainId);\n              console.log('offlineSigner', offlineSigner);\n              let cwClient = await SigningCosmWasmClient.connectWithSigner(this.state.rpc, offlineSigner);\n              let accounts = await offlineSigner.getAccounts();\n              let queryHandler = cwClient.queryClient.wasm.queryContractSmart;\n              let gasPrice = GasPrice.fromString('0.002utorii');\n              let userAddress = accounts[0].address; // Update state\n\n              this.setState({\n                accounts: accounts,\n                userAddress: userAddress,\n                cwClient: cwClient,\n                queryHandler: queryHandler,\n                gasPrice: gasPrice,\n                offlineSigner: offlineSigner\n              }); // Debug\n\n              console.log('dApp Connected', {\n                accounts: this.state.accounts,\n                userAddress: this.state.userAddress,\n                client: this.state.cwClient,\n                queryHandler: this.state.queryHandler,\n                gasPrice: this.state.gasPrice,\n                offlineSigner: this.state.offlineSigner\n              }); // Get count\n\n              let counter = await this.getCount();\n\n              try {\n                if (!isNaN(counter.count)) {\n                  this.setState({\n                    counter: counter.count\n                  });\n                } else {\n                  console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n                }\n              } catch (e) {\n                console.warn('Error: failed getting counter value', e);\n              }\n            } else {\n              console.warn('Error access experimental features, please update Keplr');\n            }\n          } else {\n            console.warn('Error accessing Keplr');\n          }\n        } else {\n          console.warn('Error parsing window object');\n        }\n      } catch (e) {\n        console.error('Error connecting to wallet', e);\n      }\n    };\n\n    this.getCount = async () => {\n      // SigningCosmWasmClient.query: async (address, query)\n      let loading;\n      loading = {\n        status: true,\n        msg: \"Refreshing counter...\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n      let entrypoint = {\n        get_count: {}\n      };\n      let query = await this.state.queryHandler(this.state.contract, entrypoint);\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n      console.log('Counter Queried', query);\n      return query;\n    };\n\n    this.incrementCounter = async () => {\n      // SigningCosmWasmClient.execute: async (senderAddress, contractAddress, msg, fee, memo = \"\", funds)\n      if (!this.state.accounts) {\n        console.warn('Error getting accounts', this.state.accounts);\n        return;\n      } else if (!this.state.userAddress) {\n        console.warn('Error getting user address', this.state.userAddress);\n        return;\n      }\n\n      let loading;\n      loading = {\n        status: true,\n        msg: \"Incrementing counter...\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      }); // Prepare Tx\n\n      let entrypoint = {\n        increment: {}\n      };\n      let txFee = calculateFee(300000, this.state.gasPrice); // XXX TODO: Fix gas estimation (https://github.com/cosmos/cosmjs/issues/828)\n\n      console.log('Tx args', {\n        senderAddress: this.state.userAddress,\n        contractAddress: this.state.contract,\n        msg: entrypoint,\n        fee: txFee\n      }); // Send Tx\n\n      try {\n        let tx = await this.state.cwClient.execute(this.state.userAddress, this.state.contract, entrypoint, txFee);\n        console.log('Increment Tx', tx); // Update Logs\n\n        if (tx.logs) {\n          if (tx.logs.length) {\n            tx.logs[0].type = 'increment';\n            tx.logs[0].timestamp = new Date().getTime();\n            this.setState({\n              logs: [JSON.stringify(tx.logs, null, 2), ...this.state.logs]\n            });\n          }\n        } // Refresh counter\n\n\n        let counter = await this.getCount();\n        let count;\n\n        if (!isNaN(counter.count)) {\n          count = counter.count;\n        } else {\n          count = this.state.counter;\n          console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n        } // Render updates\n\n\n        loading = {\n          status: false,\n          msg: \"\"\n        };\n        this.setState({\n          counter: count,\n          loadingStatus: loading.status,\n          loadingMsg: loading.msg\n        });\n      } catch (e) {\n        console.warn('Error exceuting Increment', e);\n        loading = {\n          status: false,\n          msg: \"\"\n        };\n        this.setState({\n          loadingStatus: loading.status,\n          loadingMsg: loading.msg\n        });\n      }\n    };\n\n    this.incrementCounterDown = async () => {\n      // SigningCosmWasmClient.execute: async (senderAddress, contractAddress, msg, fee, memo = \"\", funds)\n      if (!this.state.accounts) {\n        console.warn('Error getting accounts', this.state.accounts);\n        return;\n      } else if (!this.state.userAddress) {\n        console.warn('Error getting user address', this.state.userAddress);\n        return;\n      }\n\n      let loading;\n      loading = {\n        status: true,\n        msg: \"Incrementing counter down...\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      }); // Prepare Tx\n\n      let entrypoint = {\n        incrementbelow: {}\n      };\n      let txFee = calculateFee(300000, this.state.gasPrice); // XXX TODO: Fix gas estimation (https://github.com/cosmos/cosmjs/issues/828)\n\n      console.log('Tx args', {\n        senderAddress: this.state.userAddress,\n        contractAddress: this.state.contract,\n        msg: entrypoint,\n        fee: txFee\n      }); // Send Tx\n\n      try {\n        let tx = await this.state.cwClient.execute(this.state.userAddress, this.state.contract, entrypoint, txFee);\n        console.log('Below Tx', tx); // Update Logs\n\n        if (tx.logs) {\n          if (tx.logs.length) {\n            tx.logs[0].type = 'incrementbelow';\n            tx.logs[0].timestamp = new Date().getTime();\n            this.setState({\n              logs: [JSON.stringify(tx.logs, null, 2), ...this.state.logs]\n            });\n          }\n        } // Refresh counter\n\n\n        let counter = await this.getCount();\n        let count;\n\n        if (!isNaN(counter.count)) {\n          count = counter.count;\n        } else {\n          count = this.state.counter;\n          console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n        } // Render updates\n\n\n        loading = {\n          status: false,\n          msg: \"\"\n        };\n        this.setState({\n          counter: count,\n          loadingStatus: loading.status,\n          loadingMsg: loading.msg\n        });\n      } catch (e) {\n        console.warn('Error exceuting Incrementbelow', e);\n        loading = {\n          status: false,\n          msg: \"\"\n        };\n        this.setState({\n          loadingStatus: loading.status,\n          loadingMsg: loading.msg\n        });\n      }\n    };\n\n    this.resetCounter = async () => {\n      // SigningCosmWasmClient.execute: async (senderAddress, contractAddress, msg, fee, memo = \"\", funds)\n      if (!this.state.accounts) {\n        console.warn('Error getting user account', this.state.accounts);\n        return;\n      } else if (!this.state.userAddress) {\n        console.warn('Error getting user address', this.state.userAddress);\n        return;\n      }\n\n      let loading;\n      loading = {\n        status: true,\n        msg: \"Resetting counter...\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      }); // Prepare Tx\n\n      let entrypoint = {\n        reset: {\n          count: 1\n        }\n      };\n      let txFee = calculateFee(300000, this.state.gasPrice); // XXX TODO: Fix gas estimation (https://github.com/cosmos/cosmjs/issues/828)\n      // Send Tx\n\n      try {\n        let tx = await this.state.cwClient.execute(this.state.userAddress, this.state.contract, entrypoint, txFee);\n        console.log('Reset Tx', tx); // Update Logs\n\n        if (tx.logs) {\n          if (tx.logs.length) {\n            tx.logs[0].type = 'reset';\n            tx.logs[0].timestamp = new Date().getTime();\n            this.setState({\n              logs: [JSON.stringify(tx.logs, null, 2), ...this.state.logs]\n            });\n          }\n        } // Refresh counter\n\n\n        let counter = await this.getCount();\n        let count;\n\n        if (!isNaN(counter.count)) {\n          count = counter.count;\n        } else {\n          count = this.state.counter;\n          console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n        } // Render updates\n\n\n        loading = {\n          status: false,\n          msg: \"\"\n        };\n        this.setState({\n          counter: count,\n          loadingStatus: loading.status,\n          loadingMsg: loading.msg\n        });\n      } catch (e) {\n        console.warn('Error executing Reset', e);\n        loading = {\n          status: false,\n          msg: \"\"\n        };\n        this.setState({\n          loadingStatus: loading.status,\n          loadingMsg: loading.msg\n        });\n      }\n    };\n\n    this.state = {\n      contract: ContractAddress,\n      counter: null,\n      cwClient: null,\n      offlineSigner: null,\n      chainMeta: ConstantineInfo,\n      gasPrice: null,\n      queryHandler: null,\n      loadingStatus: false,\n      loadingMsg: \"\",\n      logs: [],\n      rpc: RPC,\n      accounts: null,\n      userAddress: null\n    };\n  }\n\n  render() {\n    // State\n    const counter = this.state.counter;\n    const loadingMsg = this.state.loadingMsg;\n    const userAddress = this.state.userAddress; // Maps\n\n    let logMeta = [];\n\n    for (let i = 0; i < this.state.logs.length; i++) {\n      let logItem = JSON.parse(this.state.logs[i]);\n      let meta = {\n        type: logItem[0].type,\n        timestamp: logItem[0].timestamp\n      };\n      logMeta.push(meta);\n    }\n\n    const logItems = this.state.logs.length ? this.state.logs.map((log, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Trend \", logMeta[i].type === 'increment' ? 'UP' : 'Reset', \"\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 19\n          }, this), \"(\", logMeta[i].timestamp, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"log-entry\",\n        children: log\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, logMeta[i].timestamp, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)) : null; // Not Connected\n\n    if (!userAddress) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"connect\",\n            className: \"btn btn-main\",\n            onClick: this.connectWallet,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this);\n    } // Connected\n\n\n    let upcounter,\n        sda = counter > 0 ? 'TO THE MOON 🚀' : 'sad';\n    let downtrend,\n        da = counter < 0 ? 'TO THE BOTTOM 🦞 🐡 🦀 🦑 🐠 🦐 🐙 🐟' : 'ds';\n    let calmtrend,\n        dasa = (counter = 0) ? 'CALM 💤' : 'dsa';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h\", {\n          className: \"my-h1\",\n          children: [\"We are going \", /*#__PURE__*/_jsxDEV(\"h\", {\n            className: \"up\",\n            children: [\" \", upcounter, /*#__PURE__*/_jsxDEV(\"h\", {\n              className: \"down\",\n              children: [\" \", downtrend]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 74\n            }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n              className: \"calm\",\n              children: [\" \", calmtrend]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 110\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"counter\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Trend:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 36\n            }, this), \"\\xA0\", upcounter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"If trend \", '>', \" 0 now is Uptrand \\uD83D\\uDCC8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"If trend \", '< 0', \" now is Downtrend \\uD83D\\uDCC9\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"incrementer\",\n          className: \"btn btn-main\",\n          onClick: this.incrementCounter,\n          children: \"Uptrend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"incrementerbelow\",\n          className: \"btn btn-main\",\n          onClick: this.incrementCounterDown,\n          children: \"Downtrend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), Loading(loadingMsg), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: logItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Conditional rendering\n\nfunction Loading(msg) {\n  if (!msg) {\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Changing Trend...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Loading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","Component","SigningCosmWasmClient","calculateFee","GasPrice","ConstantineInfo","RPC","rpc","ContractAddress","process","env","REACT_APP_CONTRACT_ADDRESS","App","constructor","props","connectWallet","console","log","window","keplr","experimentalSuggestChain","state","chainMeta","enable","chainId","offlineSigner","getOfflineSigner","cwClient","connectWithSigner","accounts","getAccounts","queryHandler","queryClient","wasm","queryContractSmart","gasPrice","fromString","userAddress","address","setState","client","counter","getCount","isNaN","count","warn","e","error","loading","status","msg","loadingStatus","loadingMsg","entrypoint","get_count","query","contract","incrementCounter","increment","txFee","senderAddress","contractAddress","fee","tx","execute","logs","length","type","timestamp","Date","getTime","JSON","stringify","incrementCounterDown","incrementbelow","resetCounter","reset","render","logMeta","i","logItem","parse","meta","push","logItems","map","logo","upcounter","sda","downtrend","da","calmtrend","dasa","Loading"],"sources":["/home/dfound/frontend_dApp/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { calculateFee, GasPrice } from \"@cosmjs/stargate\";\nimport { ConstantineInfo } from './chain.info.constantine';\n\nconst RPC = ConstantineInfo.rpc;\nconst ContractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contract: ContractAddress,\n      counter: null,\n      cwClient: null,\n      offlineSigner: null,\n      chainMeta: ConstantineInfo,\n      gasPrice: null,\n      queryHandler: null,\n      loadingStatus: false,\n      loadingMsg: \"\",\n      logs: [],\n      rpc: RPC,\n      accounts: null,\n      userAddress: null\n    };\n  };\n\n  /**\n   * Instances basic settings\n   * @see {File} ./.env\n   * @see {File} ./env.example\n   * @see https://create-react-app.dev/docs/adding-custom-environment-variables/\n   */\n   connectWallet = async () => {\n    console.log('Connecting wallet...');\n      try {\n        if (window) {\n          if (window['keplr']) {\n            if (window.keplr['experimentalSuggestChain']) {\n              await window.keplr.experimentalSuggestChain(this.state.chainMeta)\n              await window.keplr.enable(this.state.chainMeta.chainId);              \n              let offlineSigner = await window.getOfflineSigner(this.state.chainMeta.chainId);\n              console.log('offlineSigner', offlineSigner);\n              let cwClient = await SigningCosmWasmClient.connectWithSigner(this.state.rpc, offlineSigner);\n              let accounts = await offlineSigner.getAccounts();\n              let queryHandler = cwClient.queryClient.wasm.queryContractSmart;\n              let gasPrice = GasPrice.fromString('0.002utorii');\n              let userAddress = accounts[0].address;\n\n              // Update state\n              this.setState({\n                accounts: accounts,\n                userAddress: userAddress,\n                cwClient: cwClient,\n                queryHandler: queryHandler,\n                gasPrice: gasPrice,\n                offlineSigner: offlineSigner\n              });\n\n              // Debug\n              console.log('dApp Connected', {\n                accounts: this.state.accounts,\n                userAddress: this.state.userAddress,\n                client: this.state.cwClient,\n                queryHandler: this.state.queryHandler,\n                gasPrice: this.state.gasPrice,\n                offlineSigner: this.state.offlineSigner\n              });\n\n              // Get count\n              let counter = await this.getCount();\n              try {\n                if (!isNaN(counter.count)) {\n                  this.setState({ counter: counter.count });\n                } else {\n                  console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n                }\n              } catch (e) {\n                console.warn('Error: failed getting counter value', e);\n              }\n            } else {\n              console.warn('Error access experimental features, please update Keplr');\n            }\n          } else {\n            console.warn('Error accessing Keplr');\n          }\n        } else {\n          console.warn('Error parsing window object');\n        }\n      } catch (e) {\n        console.error('Error connecting to wallet', e);\n      }\n  }\n\n  /**\n   * Query contract counter\n   * @see {SigningCosmWasmClient}\n   * @see https://github.com/drewstaylor/archway-template/blob/main/src/contract.rs#L66-L71\n   */\n  getCount = async () => {\n    // SigningCosmWasmClient.query: async (address, query)\n    let loading;\n    loading = {\n      status: true,\n      msg: \"Refreshing counter...\"\n    };\n    this.setState({\n      loadingStatus: loading.status,\n      loadingMsg: loading.msg\n    });\n    let entrypoint = {\n      get_count: {}\n    };\n    let query = await this.state.queryHandler(this.state.contract, entrypoint);\n    loading = {\n      status: false,\n      msg: \"\"\n    };\n    this.setState({\n      loadingStatus: loading.status,\n      loadingMsg: loading.msg\n    });\n    console.log('Counter Queried', query);\n    return query;\n  }\n\n  /**\n   * Increment the counter\n   * @see {SigningCosmWasmClient}\n   * @see https://github.com/drewstaylor/archway-template/blob/main/src/contract.rs#L42\n   */\n  incrementCounter = async () => {\n    // SigningCosmWasmClient.execute: async (senderAddress, contractAddress, msg, fee, memo = \"\", funds)\n    if (!this.state.accounts) {\n      console.warn('Error getting accounts', this.state.accounts);\n      return;\n    } else if (!this.state.userAddress) {\n      console.warn('Error getting user address', this.state.userAddress);\n      return;\n    }\n    let loading;\n    loading = {\n      status: true,\n      msg: \"Incrementing counter...\"\n    };\n    this.setState({ \n      loadingStatus: loading.status,\n      loadingMsg: loading.msg\n    });\n    // Prepare Tx\n    let entrypoint = {\n      increment: {}\n    };\n    let txFee = calculateFee(300000, this.state.gasPrice); // XXX TODO: Fix gas estimation (https://github.com/cosmos/cosmjs/issues/828)\n    console.log('Tx args', {\n      senderAddress: this.state.userAddress, \n      contractAddress: this.state.contract, \n      msg: entrypoint, \n      fee: txFee\n    });\n    // Send Tx\n    try {\n      let tx = await this.state.cwClient.execute(this.state.userAddress, this.state.contract, entrypoint, txFee);\n      console.log('Increment Tx', tx);\n      // Update Logs\n      if (tx.logs) {\n        if (tx.logs.length) {\n          tx.logs[0].type = 'increment';\n          tx.logs[0].timestamp = new Date().getTime();\n          this.setState({\n            logs: [JSON.stringify(tx.logs, null, 2), ...this.state.logs]\n          });\n        }\n      }\n      // Refresh counter\n      let counter = await this.getCount();\n      let count;\n      if (!isNaN(counter.count)) {\n        count = counter.count;\n      } else {\n        count = this.state.counter;\n        console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n      }\n      // Render updates\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        counter: count,\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n    } catch (e) {\n      console.warn('Error exceuting Increment', e);\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n    }\n  }\n\n /**\n   * Increment the counter down\n   * @see {SigningCosmWasmClient}\n   * @see https://github.com/drewstaylor/archway-template/blob/main/src/contract.rs#L42\n   */\n  incrementCounterDown = async () => {\n    // SigningCosmWasmClient.execute: async (senderAddress, contractAddress, msg, fee, memo = \"\", funds)\n    if (!this.state.accounts) {\n      console.warn('Error getting accounts', this.state.accounts);\n      return;\n    } else if (!this.state.userAddress) {\n      console.warn('Error getting user address', this.state.userAddress);\n      return;\n    }\n    let loading;\n    loading = {\n      status: true,\n      msg: \"Incrementing counter down...\"\n    };\n    this.setState({ \n      loadingStatus: loading.status,\n      loadingMsg: loading.msg\n    });\n    // Prepare Tx\n    let entrypoint = {\n      incrementbelow: {}\n    };\n    let txFee = calculateFee(300000, this.state.gasPrice); // XXX TODO: Fix gas estimation (https://github.com/cosmos/cosmjs/issues/828)\n    console.log('Tx args', {\n      senderAddress: this.state.userAddress, \n      contractAddress: this.state.contract, \n      msg: entrypoint, \n      fee: txFee\n    });\n    // Send Tx\n    try {\n      let tx = await this.state.cwClient.execute(this.state.userAddress, this.state.contract, entrypoint, txFee);\n      console.log('Below Tx', tx);\n      // Update Logs\n      if (tx.logs) {\n        if (tx.logs.length) {\n          tx.logs[0].type = 'incrementbelow';\n          tx.logs[0].timestamp = new Date().getTime();\n          this.setState({\n            logs: [JSON.stringify(tx.logs, null, 2), ...this.state.logs]\n          });\n        }\n      }\n      // Refresh counter\n      let counter = await this.getCount();\n      let count;\n      if (!isNaN(counter.count)) {\n        count = counter.count;\n      } else {\n        count = this.state.counter;\n        console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n      }\n      // Render updates\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        counter: count,\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n    } catch (e) {\n      console.warn('Error exceuting Incrementbelow', e);\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n    }\n  }\n\n  /**\n   * Reset counter to 0\n   * @see {SigningCosmWasmClient}\n   * @see https://github.com/drewstaylor/archway-template/blob/main/src/contract.rs#L43\n   */\n  resetCounter = async () => {\n    // SigningCosmWasmClient.execute: async (senderAddress, contractAddress, msg, fee, memo = \"\", funds)\n    if (!this.state.accounts) {\n      console.warn('Error getting user account', this.state.accounts);\n      return;\n    } else if (!this.state.userAddress) {\n      console.warn('Error getting user address', this.state.userAddress);\n      return;\n    }\n    let loading;\n    loading = {\n      status: true,\n      msg: \"Resetting counter...\"\n    };\n    this.setState({\n      loadingStatus: loading.status,\n      loadingMsg: loading.msg\n    });\n    // Prepare Tx\n    let entrypoint = {\n      reset: {\n        count: 1\n      }\n    };\n    let txFee = calculateFee(300000, this.state.gasPrice); // XXX TODO: Fix gas estimation (https://github.com/cosmos/cosmjs/issues/828)\n    // Send Tx\n    try {\n      let tx = await this.state.cwClient.execute(this.state.userAddress, this.state.contract, entrypoint, txFee);\n      console.log('Reset Tx', tx);\n      // Update Logs\n      if (tx.logs) {\n        if (tx.logs.length) {\n          tx.logs[0].type = 'reset';\n          tx.logs[0].timestamp = new Date().getTime();\n          this.setState({\n            logs: [JSON.stringify(tx.logs, null, 2), ...this.state.logs]\n          });\n        }\n      }\n      // Refresh counter\n      let counter = await this.getCount();\n      let count;\n      if (!isNaN(counter.count)) {\n        count = counter.count;\n      } else {\n        count = this.state.counter;\n        console.warn('Error expected numeric value from counter, found: ', typeof counter.count);\n      }\n      // Render updates\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        counter: count,\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n    } catch (e) {\n      console.warn('Error executing Reset', e);\n      loading = {\n        status: false,\n        msg: \"\"\n      };\n      this.setState({\n        loadingStatus: loading.status,\n        loadingMsg: loading.msg\n      });\n    }\n  }\n\n  render() {\n    // State\n    const counter = this.state.counter;\n    const loadingMsg = this.state.loadingMsg;\n    const userAddress = this.state.userAddress;\n\n    // Maps\n    let logMeta = [];\n    for (let i = 0; i < this.state.logs.length; i++) {\n      let logItem = JSON.parse(this.state.logs[i]);\n      let meta = {\n        type: logItem[0].type,\n        timestamp: logItem[0].timestamp\n      };\n      logMeta.push(meta);\n    }\n    const logItems = (this.state.logs.length) ? this.state.logs.map((log,i) =>\n      <div key={logMeta[i].timestamp}>\n        <p className=\"label\">\n          <strong><span>Trend {(logMeta[i].type === 'increment') ? 'UP' : 'Reset' }&nbsp;</span>({logMeta[i].timestamp}):</strong>\n        </p>\n        <pre className=\"log-entry\" key={i}>{log}</pre>\n      </div>\n    ) : null;\n\n    // Not Connected\n    if (!userAddress) {\n      return (\n        <div className=\"content\">\n          <img src={logo} alt=\"logo\" />\n\n          <div className=\"button-controls\">\n            <button id=\"connect\" className=\"btn btn-main\" onClick={this.connectWallet}>Connect Wallet</button>\n          </div>\n\n        </div>\n      );\n    }\n\n    // Connected\n\tlet upcounter, sda = (counter > 0) ? 'TO THE MOON 🚀' :\n    'sad' ;\n    let downtrend, da = (counter < 0) ? 'TO THE BOTTOM 🦞 🐡 🦀 🦑 🐠 🦐 🐙 🐟' :\n    'ds' ;\n    let calmtrend, dasa = (counter = 0) ? 'CALM 💤' :\n    'dsa' ;\n        \n    return (\n      <div className=\"content\">\n        <img src={logo} alt=\"logo\" />\n\t<div>\n\t        <h className=\"my-h1\">We are going <h className=\"up\"> {upcounter}<h className=\"down\"> {downtrend}</h><h className=\"calm\"> {calmtrend}</h></h></h>\n\n\t</div>\n        {/* Counter Status Display */}\n        <div className=\"status-display\">\n          <ul className=\"status\">\n           <li className=\"counter\"><strong>Trend:</strong>&nbsp;{upcounter}</li>\n          </ul>\n\t<strong><small><p>If trend {'>'} 0 now is Uptrand 📈</p></small></strong>\n\t<strong><small><p>If trend {'< 0'} now is Downtrend 📉</p></small></strong>\n\t</div>\n\n        {/* Controls */}\n        <div className=\"button-controls\">\n         <button id=\"incrementer\" className=\"btn btn-main\" onClick={this.incrementCounter}>Uptrend</button>\n\t<button id=\"incrementerbelow\" className=\"btn btn-main\" onClick={this.incrementCounterDown}>Downtrend</button>\n        </div>\n\n        {/* Loading */}\n       {Loading(loadingMsg)}\n\n        {/* Logs map */}\n        <div className=\"logs\">\n          <div>{logItems}</div>\n        </div>\n\n      </div>\n    );\n  };\n\n}\n\n// Conditional rendering\nfunction Loading(msg) {\n  if (!msg) {\n    return;\n  }\n  return (\n    <div className=\"loading\">\n      <p>Changing Trend...</p>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}