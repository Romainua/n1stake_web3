{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add5H = exports.add5L = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\n\nconst _32n = BigInt(32);\n\nfunction fromBig(n) {\n  let le = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (le) return {\n    h: Number(n & U32_MASK64),\n    l: Number(n >> _32n & U32_MASK64)\n  };\n  return {\n    h: Number(n >> _32n & U32_MASK64) | 0,\n    l: Number(n & U32_MASK64) | 0\n  };\n}\n\nexports.fromBig = fromBig;\n\nfunction split(lst) {\n  let le = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n\n  for (let i = 0; i < lst.length; i++) {\n    const {\n      h,\n      l\n    } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n\n  return [Ah, Al];\n}\n\nexports.split = split;\n\nconst toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0);\n\nexports.toBig = toBig; // for Shift in [0, 32)\n\nconst shrSH = (h, l, s) => h >>> s;\n\nexports.shrSH = shrSH;\n\nconst shrSL = (h, l, s) => h << 32 - s | l >>> s;\n\nexports.shrSL = shrSL; // Right rotate for Shift in [1, 32)\n\nconst rotrSH = (h, l, s) => h >>> s | l << 32 - s;\n\nexports.rotrSH = rotrSH;\n\nconst rotrSL = (h, l, s) => h << 32 - s | l >>> s;\n\nexports.rotrSL = rotrSL; // Right rotate for Shift in (32, 64), NOTE: 32 is special case.\n\nconst rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;\n\nexports.rotrBH = rotrBH;\n\nconst rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s;\n\nexports.rotrBL = rotrBL; // Right rotate for shift===32 (just swaps l&h)\n\nconst rotr32H = (h, l) => l;\n\nexports.rotr32H = rotr32H;\n\nconst rotr32L = (h, l) => h;\n\nexports.rotr32L = rotr32L; // Left rotate for Shift in [1, 32)\n\nconst rotlSH = (h, l, s) => h << s | l >>> 32 - s;\n\nexports.rotlSH = rotlSH;\n\nconst rotlSL = (h, l, s) => l << s | h >>> 32 - s;\n\nexports.rotlSL = rotlSL; // Left rotate for Shift in (32, 64), NOTE: 32 is special case.\n\nconst rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;\n\nexports.rotlBH = rotlBH;\n\nconst rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s;\n\nexports.rotlBL = rotlBL; // JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n\nfunction add(Ah, Al, Bh, Bl) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return {\n    h: Ah + Bh + (l / 2 ** 32 | 0) | 0,\n    l: l | 0\n  };\n}\n\nexports.add = add; // Addition with more than 2 elements\n\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\n\nexports.add3L = add3L;\n\nconst add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;\n\nexports.add3H = add3H;\n\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\n\nexports.add4L = add4L;\n\nconst add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;\n\nexports.add4H = add4H;\n\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\n\nexports.add5L = add5L;\n\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;\n\nexports.add5H = add5H;","map":{"version":3,"names":["Object","defineProperty","exports","value","add5H","add5L","add4H","add4L","add3H","add3L","add","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","split","fromBig","U32_MASK64","BigInt","_32n","n","le","h","Number","l","lst","Ah","Uint32Array","length","Al","i","s","Bh","Bl","Cl","low","Ch","Dl","Dh","El","Eh"],"sources":["/home/dfound/my-app/node_modules/@noble/hashes/_u64.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5H = exports.add5L = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}