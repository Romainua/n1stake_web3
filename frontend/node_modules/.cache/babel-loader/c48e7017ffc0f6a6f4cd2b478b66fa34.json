{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.sha1 = exports.Sha1 = void 0;\n\nconst sha_js_1 = __importDefault(require(\"sha.js\"));\n\nclass Sha1 {\n  constructor(firstData) {\n    this.blockSize = 512 / 8;\n    this.impl = sha_js_1.default(\"sha1\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update(data);\n    return this;\n  }\n\n  digest() {\n    return new Uint8Array(this.impl.digest());\n  }\n\n}\n\nexports.Sha1 = Sha1;\n/** Convenience function equivalent to `new Sha1(data).digest()` */\n\nfunction sha1(data) {\n  return new Sha1(data).digest();\n}\n\nexports.sha1 = sha1;\n\nclass Sha256 {\n  constructor(firstData) {\n    this.blockSize = 512 / 8;\n    this.impl = sha_js_1.default(\"sha256\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update(data);\n    return this;\n  }\n\n  digest() {\n    return new Uint8Array(this.impl.digest());\n  }\n\n}\n\nexports.Sha256 = Sha256;\n/** Convenience function equivalent to `new Sha256(data).digest()` */\n\nfunction sha256(data) {\n  return new Sha256(data).digest();\n}\n\nexports.sha256 = sha256;\n\nclass Sha512 {\n  constructor(firstData) {\n    this.blockSize = 1024 / 8;\n    this.impl = sha_js_1.default(\"sha512\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update(data);\n    return this;\n  }\n\n  digest() {\n    return new Uint8Array(this.impl.digest());\n  }\n\n}\n\nexports.Sha512 = Sha512;\n/** Convenience function equivalent to `new Sha512(data).digest()` */\n\nfunction sha512(data) {\n  return new Sha512(data).digest();\n}\n\nexports.sha512 = sha512;","map":{"version":3,"mappings":";;;;;;;;;;;;;AACA;;AAIA,MAAaA,IAAb,CAAiB;EAKfC,YAAmBC,SAAnB,EAAyC;IAJzB,iBAAY,MAAM,CAAlB;IAKd,KAAKC,IAAL,GAAYC,iBAAM,MAAN,CAAZ;;IAEA,IAAIF,SAAJ,EAAe;MACb,KAAKG,MAAL,CAAYH,SAAZ;IACD;EACF;;EAEMG,MAAM,CAACC,IAAD,EAAiB;IAC5B,KAAKH,IAAL,CAAUE,MAAV,CAAiBC,IAAjB;IACA,OAAO,IAAP;EACD;;EAEMC,MAAM;IACX,OAAO,IAAIC,UAAJ,CAAe,KAAKL,IAAL,CAAUI,MAAV,EAAf,CAAP;EACD;;AApBc;;AAAjBE;AAuBA;;AACA,SAAgBC,IAAhB,CAAqBJ,IAArB,EAAqC;EACnC,OAAO,IAAIN,IAAJ,CAASM,IAAT,EAAeC,MAAf,EAAP;AACD;;AAFDE;;AAIA,MAAaE,MAAb,CAAmB;EAKjBV,YAAmBC,SAAnB,EAAyC;IAJzB,iBAAY,MAAM,CAAlB;IAKd,KAAKC,IAAL,GAAYC,iBAAM,QAAN,CAAZ;;IAEA,IAAIF,SAAJ,EAAe;MACb,KAAKG,MAAL,CAAYH,SAAZ;IACD;EACF;;EAEMG,MAAM,CAACC,IAAD,EAAiB;IAC5B,KAAKH,IAAL,CAAUE,MAAV,CAAiBC,IAAjB;IACA,OAAO,IAAP;EACD;;EAEMC,MAAM;IACX,OAAO,IAAIC,UAAJ,CAAe,KAAKL,IAAL,CAAUI,MAAV,EAAf,CAAP;EACD;;AApBgB;;AAAnBE;AAuBA;;AACA,SAAgBG,MAAhB,CAAuBN,IAAvB,EAAuC;EACrC,OAAO,IAAIK,MAAJ,CAAWL,IAAX,EAAiBC,MAAjB,EAAP;AACD;;AAFDE;;AAIA,MAAaI,MAAb,CAAmB;EAKjBZ,YAAmBC,SAAnB,EAAyC;IAJzB,iBAAY,OAAO,CAAnB;IAKd,KAAKC,IAAL,GAAYC,iBAAM,QAAN,CAAZ;;IAEA,IAAIF,SAAJ,EAAe;MACb,KAAKG,MAAL,CAAYH,SAAZ;IACD;EACF;;EAEMG,MAAM,CAACC,IAAD,EAAiB;IAC5B,KAAKH,IAAL,CAAUE,MAAV,CAAiBC,IAAjB;IACA,OAAO,IAAP;EACD;;EAEMC,MAAM;IACX,OAAO,IAAIC,UAAJ,CAAe,KAAKL,IAAL,CAAUI,MAAV,EAAf,CAAP;EACD;;AApBgB;;AAAnBE;AAuBA;;AACA,SAAgBK,MAAhB,CAAuBR,IAAvB,EAAuC;EACrC,OAAO,IAAIO,MAAJ,CAAWP,IAAX,EAAiBC,MAAjB,EAAP;AACD;;AAFDE","names":["Sha1","constructor","firstData","impl","sha_js_1","update","data","digest","Uint8Array","exports","sha1","Sha256","sha256","Sha512","sha512"],"sourceRoot":"","sources":["../src/sha.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}