{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AminoTypes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst amino_1 = require(\"@cosmjs/amino\");\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst utils_1 = require(\"@cosmjs/utils\");\n\nconst gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\n\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nfunction omitDefault(input) {\n  if (typeof input === \"string\") {\n    return input === \"\" ? undefined : input;\n  }\n\n  if (typeof input === \"number\") {\n    return input === 0 ? undefined : input;\n  }\n\n  if (long_1.default.isLong(input)) {\n    return input.isZero() ? undefined : input;\n  }\n\n  throw new Error(`Got unsupported type '${typeof input}'`);\n}\n\nfunction createDefaultTypes(prefix) {\n  return {\n    // bank\n    \"/cosmos.bank.v1beta1.MsgSend\": {\n      aminoType: \"cosmos-sdk/MsgSend\",\n      toAmino: _ref => {\n        let {\n          fromAddress,\n          toAddress,\n          amount\n        } = _ref;\n        return {\n          from_address: fromAddress,\n          to_address: toAddress,\n          amount: [...amount]\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          from_address,\n          to_address,\n          amount\n        } = _ref2;\n        return {\n          fromAddress: from_address,\n          toAddress: to_address,\n          amount: [...amount]\n        };\n      }\n    },\n    \"/cosmos.bank.v1beta1.MsgMultiSend\": {\n      aminoType: \"cosmos-sdk/MsgMultiSend\",\n      toAmino: _ref3 => {\n        let {\n          inputs,\n          outputs\n        } = _ref3;\n        return {\n          inputs: inputs.map(input => ({\n            address: input.address,\n            coins: [...input.coins]\n          })),\n          outputs: outputs.map(output => ({\n            address: output.address,\n            coins: [...output.coins]\n          }))\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          inputs,\n          outputs\n        } = _ref4;\n        return {\n          inputs: inputs.map(input => ({\n            address: input.address,\n            coins: [...input.coins]\n          })),\n          outputs: outputs.map(output => ({\n            address: output.address,\n            coins: [...output.coins]\n          }))\n        };\n      }\n    },\n    // distribution\n    \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\": {\n      aminoType: \"cosmos-sdk/MsgFundCommunityPool\",\n      toAmino: _ref5 => {\n        let {\n          amount,\n          depositor\n        } = _ref5;\n        return {\n          amount: [...amount],\n          depositor: depositor\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          amount,\n          depositor\n        } = _ref6;\n        return {\n          amount: [...amount],\n          depositor: depositor\n        };\n      }\n    },\n    \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\": {\n      aminoType: \"cosmos-sdk/MsgModifyWithdrawAddress\",\n      toAmino: _ref7 => {\n        let {\n          delegatorAddress,\n          withdrawAddress\n        } = _ref7;\n        return {\n          delegator_address: delegatorAddress,\n          withdraw_address: withdrawAddress\n        };\n      },\n      fromAmino: _ref8 => {\n        let {\n          delegator_address,\n          withdraw_address\n        } = _ref8;\n        return {\n          delegatorAddress: delegator_address,\n          withdrawAddress: withdraw_address\n        };\n      }\n    },\n    \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\": {\n      aminoType: \"cosmos-sdk/MsgWithdrawDelegationReward\",\n      toAmino: _ref9 => {\n        let {\n          delegatorAddress,\n          validatorAddress\n        } = _ref9;\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref10 => {\n        let {\n          delegator_address,\n          validator_address\n        } = _ref10;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\": {\n      aminoType: \"cosmos-sdk/MsgWithdrawValidatorCommission\",\n      toAmino: _ref11 => {\n        let {\n          validatorAddress\n        } = _ref11;\n        return {\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref12 => {\n        let {\n          validator_address\n        } = _ref12;\n        return {\n          validatorAddress: validator_address\n        };\n      }\n    },\n    // gov\n    \"/cosmos.gov.v1beta1.MsgDeposit\": {\n      aminoType: \"cosmos-sdk/MsgDeposit\",\n      toAmino: _ref13 => {\n        let {\n          amount,\n          depositor,\n          proposalId\n        } = _ref13;\n        return {\n          amount,\n          depositor,\n          proposal_id: proposalId.toString()\n        };\n      },\n      fromAmino: _ref14 => {\n        let {\n          amount,\n          depositor,\n          proposal_id\n        } = _ref14;\n        return {\n          amount: Array.from(amount),\n          depositor,\n          proposalId: long_1.default.fromString(proposal_id)\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVote\": {\n      aminoType: \"cosmos-sdk/MsgVote\",\n      toAmino: _ref15 => {\n        let {\n          option,\n          proposalId,\n          voter\n        } = _ref15;\n        return {\n          option: option,\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: _ref16 => {\n        let {\n          option,\n          proposal_id,\n          voter\n        } = _ref16;\n        return {\n          option: gov_1.voteOptionFromJSON(option),\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n      aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n      toAmino: _ref17 => {\n        let {\n          initialDeposit,\n          proposer,\n          content\n        } = _ref17;\n        utils_1.assertDefinedAndNotNull(content);\n        let proposal;\n\n        switch (content.typeUrl) {\n          case \"/cosmos.gov.v1beta1.TextProposal\":\n            {\n              const textProposal = gov_1.TextProposal.decode(content.value);\n              proposal = {\n                type: \"cosmos-sdk/TextProposal\",\n                value: {\n                  description: textProposal.description,\n                  title: textProposal.title\n                }\n              };\n              break;\n            }\n\n          default:\n            throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n        }\n\n        return {\n          initial_deposit: initialDeposit,\n          proposer: proposer,\n          content: proposal\n        };\n      },\n      fromAmino: _ref18 => {\n        let {\n          initial_deposit,\n          proposer,\n          content\n        } = _ref18;\n        let any_content;\n\n        switch (content.type) {\n          case \"cosmos-sdk/TextProposal\":\n            {\n              const {\n                value\n              } = content;\n              utils_1.assert(utils_1.isNonNullObject(value));\n              const {\n                title,\n                description\n              } = value;\n              utils_1.assert(typeof title === \"string\");\n              utils_1.assert(typeof description === \"string\");\n              any_content = any_1.Any.fromPartial({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                  title: title,\n                  description: description\n                })).finish()\n              });\n              break;\n            }\n\n          default:\n            throw new Error(`Unsupported proposal type: '${content.type}'`);\n        }\n\n        return {\n          initialDeposit: Array.from(initial_deposit),\n          proposer: proposer,\n          content: any_content\n        };\n      }\n    },\n    // staking\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: _ref19 => {\n        let {\n          delegatorAddress,\n          validatorSrcAddress,\n          validatorDstAddress,\n          amount\n        } = _ref19;\n        utils_1.assertDefinedAndNotNull(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref20 => {\n        let {\n          delegator_address,\n          validator_src_address,\n          validator_dst_address,\n          amount\n        } = _ref20;\n        return {\n          delegatorAddress: delegator_address,\n          validatorSrcAddress: validator_src_address,\n          validatorDstAddress: validator_dst_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: _ref21 => {\n        let {\n          description,\n          commission,\n          minSelfDelegation,\n          delegatorAddress,\n          validatorAddress,\n          pubkey,\n          value\n        } = _ref21;\n        utils_1.assertDefinedAndNotNull(description, \"missing description\");\n        utils_1.assertDefinedAndNotNull(commission, \"missing commission\");\n        utils_1.assertDefinedAndNotNull(pubkey, \"missing pubkey\");\n        utils_1.assertDefinedAndNotNull(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            max_rate: commission.maxRate,\n            max_change_rate: commission.maxChangeRate\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: amino_1.encodeBech32Pubkey({\n            type: \"tendermint/PubKeySecp256k1\",\n            value: encoding_1.toBase64(pubkey.value)\n          }, prefix),\n          value: value\n        };\n      },\n      fromAmino: _ref22 => {\n        let {\n          description,\n          commission,\n          min_self_delegation,\n          delegator_address,\n          validator_address,\n          pubkey,\n          value\n        } = _ref22;\n        const decodedPubkey = amino_1.decodeBech32Pubkey(pubkey);\n\n        if (decodedPubkey.type !== \"tendermint/PubKeySecp256k1\") {\n          throw new Error(\"Only Secp256k1 public keys are supported\");\n        }\n\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            maxRate: commission.max_rate,\n            maxChangeRate: commission.max_change_rate\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: {\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: encoding_1.fromBase64(decodedPubkey.value)\n          },\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: _ref23 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref23;\n        utils_1.assertDefinedAndNotNull(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref24 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref24;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: _ref25 => {\n        let {\n          description,\n          commissionRate,\n          minSelfDelegation,\n          validatorAddress\n        } = _ref25;\n        utils_1.assertDefinedAndNotNull(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission_rate: commissionRate,\n          min_self_delegation: minSelfDelegation,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref26 => {\n        let {\n          description,\n          commission_rate,\n          min_self_delegation,\n          validator_address\n        } = _ref26;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commissionRate: commission_rate,\n          minSelfDelegation: min_self_delegation,\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: _ref27 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref27;\n        utils_1.assertDefinedAndNotNull(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref28 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref28;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    // ibc\n    \"/ibc.applications.transfer.v1.MsgTransfer\": {\n      aminoType: \"cosmos-sdk/MsgTransfer\",\n      toAmino: _ref29 => {\n        let {\n          sourcePort,\n          sourceChannel,\n          token,\n          sender,\n          receiver,\n          timeoutHeight,\n          timeoutTimestamp\n        } = _ref29;\n\n        var _a, _b, _c;\n\n        return {\n          source_port: sourcePort,\n          source_channel: sourceChannel,\n          token: token,\n          sender: sender,\n          receiver: receiver,\n          timeout_height: timeoutHeight ? {\n            revision_height: (_a = omitDefault(timeoutHeight.revisionHeight)) === null || _a === void 0 ? void 0 : _a.toString(),\n            revision_number: (_b = omitDefault(timeoutHeight.revisionNumber)) === null || _b === void 0 ? void 0 : _b.toString()\n          } : {},\n          timeout_timestamp: (_c = omitDefault(timeoutTimestamp)) === null || _c === void 0 ? void 0 : _c.toString()\n        };\n      },\n      fromAmino: _ref30 => {\n        let {\n          source_port,\n          source_channel,\n          token,\n          sender,\n          receiver,\n          timeout_height,\n          timeout_timestamp\n        } = _ref30;\n        return {\n          sourcePort: source_port,\n          sourceChannel: source_channel,\n          token: token,\n          sender: sender,\n          receiver: receiver,\n          timeoutHeight: timeout_height ? {\n            revisionHeight: long_1.default.fromString(timeout_height.revision_height || \"0\", true),\n            revisionNumber: long_1.default.fromString(timeout_height.revision_number || \"0\", true)\n          } : undefined,\n          timeoutTimestamp: long_1.default.fromString(timeout_timestamp || \"0\", true)\n        };\n      }\n    }\n  };\n}\n/**\n * A map from Stargate message types as used in the messages's `Any` type\n * to Amino types.\n */\n\n\nclass AminoTypes {\n  constructor() {\n    let {\n      additions = {},\n      prefix = \"cosmos\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const additionalAminoTypes = Object.values(additions);\n    const filteredDefaultTypes = Object.entries(createDefaultTypes(prefix)).reduce((acc, _ref31) => {\n      let [key, value] = _ref31;\n      return additionalAminoTypes.find(_ref32 => {\n        let {\n          aminoType\n        } = _ref32;\n        return value.aminoType === aminoType;\n      }) ? acc : Object.assign(Object.assign({}, acc), {\n        [key]: value\n      });\n    }, {});\n    this.register = Object.assign(Object.assign({}, filteredDefaultTypes), additions);\n  }\n\n  toAmino(_ref33) {\n    let {\n      typeUrl,\n      value\n    } = _ref33;\n    const converter = this.register[typeUrl];\n\n    if (!converter) {\n      throw new Error(\"Type URL does not exist in the Amino message type register. \" + \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" + \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n    }\n\n    return {\n      type: converter.aminoType,\n      value: converter.toAmino(value)\n    };\n  }\n\n  fromAmino(_ref34) {\n    let {\n      type,\n      value\n    } = _ref34;\n    const result = Object.entries(this.register).find(_ref35 => {\n      let [_typeUrl, {\n        aminoType\n      }] = _ref35;\n      return aminoType === type;\n    });\n\n    if (!result) {\n      throw new Error(\"Type does not exist in the Amino message type register. \" + \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" + \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n    }\n\n    const [typeUrl, converter] = result;\n    return {\n      typeUrl: typeUrl,\n      value: converter.fromAmino(value)\n    };\n  }\n\n}\n\nexports.AminoTypes = AminoTypes;","map":{"version":3,"mappings":"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","names":["omitDefault","input","undefined","long_1","isLong","isZero","Error","createDefaultTypes","prefix","aminoType","toAmino","fromAddress","toAddress","amount","from_address","to_address","fromAmino","inputs","outputs","map","address","coins","output","depositor","delegatorAddress","withdrawAddress","delegator_address","withdraw_address","validatorAddress","validator_address","proposalId","proposal_id","toString","Array","from","fromString","option","voter","gov_1","initialDeposit","proposer","content","utils_1","proposal","typeUrl","textProposal","decode","value","type","description","title","initial_deposit","any_content","any_1","fromPartial","encode","finish","validatorSrcAddress","validatorDstAddress","validator_src_address","validator_dst_address","commission","minSelfDelegation","pubkey","moniker","identity","website","security_contact","securityContact","details","rate","max_rate","maxRate","max_change_rate","maxChangeRate","min_self_delegation","amino_1","encoding_1","decodedPubkey","commissionRate","commission_rate","sourcePort","sourceChannel","token","sender","receiver","timeoutHeight","timeoutTimestamp","source_port","source_channel","timeout_height","revision_height","revisionHeight","_a","revision_number","revisionNumber","_b","timeout_timestamp","_c","AminoTypes","constructor","additions","additionalAminoTypes","Object","values","filteredDefaultTypes","entries","reduce","acc","key","find","register","converter","result","_typeUrl","exports"],"sourceRoot":"","sources":["../src/aminotypes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}