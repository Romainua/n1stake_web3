{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nconst proofs_1 = require(\"../../../../confio/proofs\");\n\nexports.protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexports.MerkleRoot = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerkleRoot);\n    message.hash = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerkleRoot);\n    message.hash = new Uint8Array();\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = bytesFromBase64(object.hash);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseMerkleRoot);\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseMerklePrefix = {};\nexports.MerklePrefix = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.keyPrefix.length !== 0) {\n      writer.uint32(10).bytes(message.keyPrefix);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerklePrefix);\n    message.keyPrefix = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPrefix = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerklePrefix);\n    message.keyPrefix = new Uint8Array();\n\n    if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n      message.keyPrefix = bytesFromBase64(object.keyPrefix);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.keyPrefix !== undefined && (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseMerklePrefix);\n    message.keyPrefix = (_a = object.keyPrefix) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseMerklePath = {\n  keyPath: \"\"\n};\nexports.MerklePath = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.keyPath) {\n      writer.uint32(10).string(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPath.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n\n    if (object.keyPath !== undefined && object.keyPath !== null) {\n      for (const e of object.keyPath) {\n        message.keyPath.push(String(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.keyPath) {\n      obj.keyPath = message.keyPath.map(e => e);\n    } else {\n      obj.keyPath = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n\n    if (object.keyPath !== undefined && object.keyPath !== null) {\n      for (const e of object.keyPath) {\n        message.keyPath.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMerkleProof = {};\nexports.MerkleProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.proofs) {\n      proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n\n    if (object.proofs !== undefined && object.proofs !== null) {\n      for (const e of object.proofs) {\n        message.proofs.push(proofs_1.CommitmentProof.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.proofs) {\n      obj.proofs = message.proofs.map(e => e ? proofs_1.CommitmentProof.toJSON(e) : undefined);\n    } else {\n      obj.proofs = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n\n    if (object.proofs !== undefined && object.proofs !== null) {\n      for (const e of object.proofs) {\n        message.proofs.push(proofs_1.CommitmentProof.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","baseMerkleRoot","encode","message","writer","minimal_1","Writer","create","hash","length","uint32","bytes","decode","input","reader","Reader","end","undefined","len","pos","Object","Uint8Array","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","_a","baseMerklePrefix","keyPrefix","baseMerklePath","keyPath","v","string","push","e","String","map","baseMerkleProof","proofs","proofs_1","fork","ldelim","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","long_1","configure"],"sourceRoot":"","sources":["../../../../../src/ibc/core/commitment/v1/commitment.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}